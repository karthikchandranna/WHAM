<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="jerks">
    <property environment="env" />
    <property name="ECLIPSE_HOME" value="../../../../Program Files (x86)/jee-mars/eclipse/" />
    <property name="junit.output.dir" value="junit" />
    <property name="debuglevel" value="source,lines,vars" />
    <property name="target" value="1.7" />
    <property name="source" value="1.7" />
    <path id="Maven Dependencies.libraryclasspath">
        <pathelement location="../../.m2/repository/junit/junit/4.4/junit-4.4.jar" />
        <pathelement location="../../.m2/repository/junit/junit-dep/4.7/junit-dep-4.7.jar" />
        <pathelement location="../../.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar" />
        <pathelement location="../../.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar" />
        <pathelement location="../../.m2/repository/org/eclipse/persistence/eclipselink/2.5.0/eclipselink-2.5.0.jar" />
        <pathelement location="../../.m2/repository/org/eclipse/persistence/javax.persistence/2.1.0/javax.persistence-2.1.0.jar" />
        <pathelement location="../../.m2/repository/org/eclipse/persistence/commonj.sdo/2.1.1/commonj.sdo-2.1.1.jar" />
        <pathelement location="../../.m2/repository/mysql/mysql-connector-java/5.1.35/mysql-connector-java-5.1.35.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/org.json.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/mysql-connector-java-5.1.35.jar" />
        <pathelement location="../../.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar" />
        <pathelement location="../../.m2/repository/org/springframework/spring-core/4.2.2.RELEASE/spring-core-4.2.2.RELEASE.jar" />
        <pathelement location="../../.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar" />
        <pathelement location="../../.m2/repository/org/springframework/spring-web/3.2.13.RELEASE/spring-web-3.2.13.RELEASE.jar" />
        <pathelement location="../../.m2/repository/org/springframework/spring-aop/3.2.13.RELEASE/spring-aop-3.2.13.RELEASE.jar" />
        <pathelement location="../../.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar" />
        <pathelement location="../../.m2/repository/org/springframework/spring-beans/3.2.13.RELEASE/spring-beans-3.2.13.RELEASE.jar" />
        <pathelement location="../../.m2/repository/org/springframework/spring-webmvc/3.2.13.RELEASE/spring-webmvc-3.2.13.RELEASE.jar" />
        <pathelement location="../../.m2/repository/org/springframework/spring-expression/3.2.13.RELEASE/spring-expression-3.2.13.RELEASE.jar" />
        <pathelement location="../../.m2/repository/org/springframework/spring-context/3.2.13.RELEASE/spring-context-3.2.13.RELEASE.jar" />
        <pathelement location="../../.m2/repository/org/eclipse/persistence/org.eclipse.persistence.jpa/2.6.1/org.eclipse.persistence.jpa-2.6.1.jar" />
        <pathelement location="../../.m2/repository/org/eclipse/persistence/org.eclipse.persistence.asm/2.6.1/org.eclipse.persistence.asm-2.6.1.jar" />
        <pathelement location="../../.m2/repository/org/eclipse/persistence/org.eclipse.persistence.antlr/2.6.1/org.eclipse.persistence.antlr-2.6.1.jar" />
        <pathelement location="../../.m2/repository/org/glassfish/javax.json/1.0.4/javax.json-1.0.4.jar" />
        <pathelement location="../../.m2/repository/org/eclipse/persistence/org.eclipse.persistence.jpa.jpql/2.6.1/org.eclipse.persistence.jpa.jpql-2.6.1.jar" />
        <pathelement location="../../.m2/repository/org/eclipse/persistence/org.eclipse.persistence.core/2.6.1/org.eclipse.persistence.core-2.6.1.jar" />
    </path>
    <path id="EclipseLink 2.5.2.userclasspath">
        <pathelement location="../../workspace-openshift/libraries/EclipseLink 2.5.2/eclipselink/jlib/eclipselink.jar" />
        <pathelement location="../../workspace-openshift/libraries/EclipseLink 2.5.2/eclipselink/jlib/jpa/javax.persistence_2.1.0.v201304241213.jar" />
        <pathelement location="../../workspace-openshift/libraries/EclipseLink 2.5.2/eclipselink/jlib/jpa/org.eclipse.persistence.jpa.modelgen_2.5.2.v20140319-9ad6abd.jar" />
        <pathelement location="../../workspace-openshift/libraries/EclipseLink 2.5.2/eclipselink/jlib/jpa/org.eclipse.persistence.jpars_2.5.2.v20140319-9ad6abd.jar" />
        <pathelement location="../../workspace-openshift/libraries/EclipseLink 2.5.2/eclipselink/jlib/moxy/com.sun.tools.xjc_2.2.0.jar" />
        <pathelement location="../../workspace-openshift/libraries/EclipseLink 2.5.2/eclipselink/jlib/moxy/com.sun.xml.bind_2.2.0.v201004141950.jar" />
        <pathelement location="../../workspace-openshift/libraries/EclipseLink 2.5.2/eclipselink/jlib/moxy/javax.activation_1.1.0.v201108011116.jar" />
        <pathelement location="../../workspace-openshift/libraries/EclipseLink 2.5.2/eclipselink/jlib/moxy/javax.mail_1.4.0.v201005080615.jar" />
        <pathelement location="../../workspace-openshift/libraries/EclipseLink 2.5.2/eclipselink/jlib/moxy/javax.xml.bind_2.2.0.v201105210648.jar" />
        <pathelement location="../../workspace-openshift/libraries/EclipseLink 2.5.2/eclipselink/jlib/moxy/javax.xml.stream_1.0.1.v201004272200.jar" />
    </path>
    <path id="jerks.classpath">
        <pathelement location="target/classes" />
        <path refid="Maven Dependencies.libraryclasspath" />
        <pathelement location="src/main/webapp/WEB-INF/lib/gson-2.4-javadoc.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/gson-2.4-sources.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/gson-2.4.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/java-json-schema.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/commons-logging-1.2.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/org.json.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/spring-beans-4.2.3.RELEASE.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/spring-context-4.2.3.RELEASE.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/spring-core-4.2.3.RELEASE.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/spring-jdbc-4.2.3.RELEASE.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/spring-web-4.2.3.RELEASE.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/spring-webmvc-4.2.3.RELEASE.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/spring-websocket-4.2.3.RELEASE.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/mysql-connector-java-5.1.35.jar" />
        <pathelement location="src/main/webapp/WEB-INF/lib/joda-time-2.4.jar" />
        <pathelement location="target/test-classes" />
        <pathelement location="src/main/webapp/WEB-INF/lib/javax.servlet.jar" />
        <path refid="EclipseLink 2.5.2.userclasspath" />
    </path>
    <path id="run.AddressProvider.classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <path id="run.AddressProviderTest.classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <path id="run.AddressProviderTest.testCreateAddressWithInvalidCountryLength.classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <path id="run.AllTests.classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <path id="run.Connection.classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <path id="run.EventManager.classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <path id="run.EventManagerTest.classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <path id="run.EventProvider.classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <path id="run.GoogleAddressToLatLong.classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <path id="run.jerks (4).classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <path id="run.TestJUnit1.classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <path id="run.UserProvider.classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <path id="run.UserProviderTest.classpath">
        <path refid="jerks.classpath" />
        <path refid="Maven Dependencies.libraryclasspath" />
    </path>
    <target name="init">
        <mkdir dir="target/classes" />
        <mkdir dir="target/test-classes" />
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/java">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/resources">
                <exclude name="**/*.java" />
                <exclude name="**" />
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/java">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="target/classes" />
        <delete dir="target/test-classes" />
    </target>
    <target depends="clean" name="cleanall" />
    <target depends="build-subprojects,build-project" name="build" />
    <target name="build-subprojects" />
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}" />
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/java" />
            <src path="src/main/resources" />
            <exclude name="**" />
            <classpath refid="jerks.classpath" />
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/test/java" />
            <classpath refid="jerks.classpath" />
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects" />
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar" />
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
        <antcall target="build" />
    </target>
    <target name="AddressProvider">
        <java classname="edu.neu.cs5500.Jerks.dbProviders.AddressProvider" failonerror="true" fork="yes">
            <classpath refid="run.AddressProvider.classpath" />
        </java>
    </target>
    <target name="AddressProviderTest">
        <mkdir dir="${junit.output.dir}" />
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml" />
            <test name="edu.neu.cs5500.dbProviders.test.AddressProviderTest" todir="${junit.output.dir}" />
            <classpath refid="run.AddressProviderTest.classpath" />
        </junit>
    </target>
    <target name="AddressProviderTest.testCreateAddressWithInvalidCountryLength">
        <mkdir dir="${junit.output.dir}" />
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml" />
            <test name="edu.neu.cs5500.dbProviders.test.AddressProviderTest" todir="${junit.output.dir}" />
            <classpath refid="run.AddressProviderTest.testCreateAddressWithInvalidCountryLength.classpath" />
        </junit>
    </target>
    <target name="AllTests">
        <mkdir dir="${junit.output.dir}" />
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml" />
            <test name="edu.neu.cs5500.jerks.TS1.AllTests" todir="${junit.output.dir}" />
            <classpath refid="run.AllTests.classpath" />
        </junit>
    </target>
    <target name="Connection">
        <java classname="edu.neu.cs5500.Jerks.business.Connection" failonerror="true" fork="yes">
            <classpath refid="run.Connection.classpath" />
        </java>
    </target>
    <target name="EventManager">
        <java classname="edu.neu.cs5500.Jerks.business.EventManager" failonerror="true" fork="yes">
            <classpath refid="run.EventManager.classpath" />
        </java>
    </target>
    <target name="EventManagerTest">
        <mkdir dir="${junit.output.dir}" />
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml" />
            <test name="edu.neu.cs5500.jerks.business.test.EventManagerTest" todir="${junit.output.dir}" />
            <classpath refid="run.EventManagerTest.classpath" />
        </junit>
    </target>
    <target name="EventProvider">
        <java classname="edu.neu.cs5500.Jerks.dbProviders.EventProvider" failonerror="true" fork="yes">
            <classpath refid="run.EventProvider.classpath" />
        </java>
    </target>
    <target name="GoogleAddressToLatLong">
        <java classname="edu.neu.cs5500.Jerks.apiCall.GoogleAddressToLatLong" failonerror="true" fork="yes">
            <classpath refid="run.GoogleAddressToLatLong.classpath" />
        </java>
    </target>
    <target name="jerks (4)">
        <mkdir dir="${junit.output.dir}" />
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml" />
            <test name="edu.neu.cs5500.jerks.TS1.AllTests" todir="${junit.output.dir}" />
            <test name="edu.neu.cs5500.jerks.TS1.TestJUnit1" todir="${junit.output.dir}" />
            <test name="edu.neu.cs5500.jerks.business.test.EventManagerTest" todir="${junit.output.dir}" />
            <classpath refid="run.jerks (4).classpath" />
        </junit>
    </target>
    <target name="TestJUnit1">
        <mkdir dir="${junit.output.dir}" />
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml" />
            <test name="edu.neu.cs5500.jerks.TS1.TestJUnit1" todir="${junit.output.dir}" />
            <classpath refid="run.TestJUnit1.classpath" />
        </junit>
    </target>
    <target name="UserProvider">
        <java classname="edu.neu.cs5500.Jerks.dbProviders.UserProvider" failonerror="true" fork="yes">
            <classpath refid="run.UserProvider.classpath" />
        </java>
    </target>
    <target name="UserProviderTest">
        <mkdir dir="${junit.output.dir}" />
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml" />
            <test name="edu.neu.cs5500.dbProviders.test.UserProviderTest" todir="${junit.output.dir}" />
            <classpath refid="run.UserProviderTest.classpath" />
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${junit.output.dir}" />
        </junitreport>
    </target>
</project>
